
########
######## Foucault03 Monitoring
########

#### ignore

[% FOREACH i = ignore -%]
# ignore [% loop.index %]
<match multilinelog.[%i.tag%]>
	@type		null
</match>

[% END -%]

#### multilinelog -> singlelinelog

[% FOREACH i = multiline2singleline -%]
# multiline2singleline [% loop.index %]
[%     IF i.command -%]
<match multilinelog.[%i.tag%]>
	@type		exec_filter
	command		/opt/foucault03/multiline2singleline/[% i.command %].pl | /opt/foucault03/bin/panopticfilter multiline2singleline -o /opt/foucault03/spool/singlelinelog.[%i.tagfixed%].%y-%m-%d_%H:00 --period=3600
	tag		singlelinelog.[%i.tagfixed%]
	<format>
		@type		single_value
	</format>
	<parse>
		@type		none
	</parse>
	<buffer tag>
		@type		memory
		flush_at_shutdown true
		flush_interval  1s
	</buffer>
</match>
[%     ELSE -%]
<match multilinelog.[%i.tag%]>
	@type		exec_filter
	command		/opt/foucault03/bin/panopticfilter multiline2singleline --firstline '[% i.firstline %]' -o /opt/foucault03/spool/singlelinelog.[%i.tagfixed%].%y-%m-%d_%H:00 --period=3600
	tag		singlelinelog.[%i.tagfixed%]
	<format>
		@type		single_value
	</format>
	<parse>
		@type		none
	</parse>
	<buffer tag>
		@type		memory
		flush_at_shutdown true
		flush_interval  1s
	</buffer>
</match>
[%     END -%]

[% END -%]

<filter multilinelog.**>
	@type	record_transformer
	<record>
		orig_tag	${tag_suffix[1]}
	</record>
</filter>
<match multilinelog.**>
	@type rewrite_tag_filter
	<rule>
		key	orig_tag
		pattern ^(.*)$
		tag	singlelinelog.$1
	</rule>
</match>

#### singlelinelog -> apicalllog / anomalylog / unmonitoredlog

<source>
	@type		tail
	path		/opt/foucault03/spool/singlelinelog.*
	pos_file	/opt/foucault03/tmp/pos.singlelinelog
	tag		singlelinelogsrc.*
	format		/(?<message>.*)/
	refresh_interval 10
	read_from_ahead true
	expand_date	true
</source>
<filter singlelinelogsrc.**>
	@type	record_transformer
	<record>
		orig_tag	${tag_suffix[5]}
	</record>
</filter>
<match singlelinelogsrc.**>
	@type rewrite_tag_filter
	<rule>
		key	orig_tag
		pattern ^(.*)$
		tag	singlelinelog.$1
	</rule>
</match>

[% FOREACH i = anomalymonitor -%]
# anomalymonitor [% loop.index %]
<match singlelinelog.[% i.tag %]>
	@type		exec_filter
	command		/opt/foucault03/bin/panopticfilter filter -p /opt/foucault03/conf/[% i.pattern %].pattern --rename 's/^singlelinelog\./anomalylog./' -o /opt/foucault03/anomalylog/anomalylog.[%i.tagfixed%].%y-%m-%d --period=86400

	<format>
		@type		json
	</format>
	<parse>
		@type		json
	</parse>
	<inject>
		tag_key		tag
		time_key	time
	</inject>
	<extract>
		tag_key		tag
		time_key	time
	</extract>
	<buffer tag>
		@type		memory
		flush_at_shutdown true
		flush_interval  1s
	</buffer>
</match>

[% END -%]

<filter singlelinelog.**>
	@type	record_transformer
	<record>
		orig_tag	${tag_suffix[1]}
	</record>
</filter>
<match singlelinelog.**>
	@type rewrite_tag_filter
	<rule>
		key	orig_tag
		pattern ^(.*)$
		tag	unmonitoredlog.$1
	</rule>
</match>

#### apicalllog -> throttlinglog

#### unmonitoredlog -> file
<match unmonitoredlog.**>
	@type file
	format		single_value
	path		/opt/foucault03/unmonitoredlog/${tag}_%Y-%m-%d
	append		true
	#time_slice_format	%Y-%m-%d
	<buffer tag,time>
		path		/opt/foucault03/tmp/unmonitoredlog.*
		timekey		1d
		timekey_wait	5s
		flush_mode	interval
		flush_interval	10s
		flush_at_shutdown true
		flush_thread_count 10
	</buffer>
</match>

